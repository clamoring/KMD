KOMODO FOUNDATIONS
PART I: DELAYED PROOF OF WORK
PART II: THE DECENTRALIZED INITIAL COIN OFFERING
The Combined Papers
Draft v0.1


Introductory Note From Komodo
This paper is a simplified explanation of two technologies that are integrally related. The first technology is called delayed Proof of Work (dPoW), which is a unique form of blockchain security. It empowers blockchains with the strength of the strongest Proof of Work blockchain network (currently Bitcoin) while maintaining a financial and eco-friendly approach. 
dPoW security provides a cornerstone for the second technology: the decentralized initial coin offering (dICO). This is a method by which blockchain entrepreneurs can create a new and independent blockchain product and release it to the public in a decentralized manner. This allows entrepreneurs to innovate without inhibition from third-party manipulators. Entrepreneurs then have the option to rely on dPoW to provide their independent blockchain with security.
Both of these technologies are part of a larger project known as Komodo. Many readers may be interested to understand how they fit into the overall Komodo vision. Such readers are currently finding it difficult to locate relevant information regarding Komodo, due to the project’s technical complexity and comparatively young age. As a team, we are working diligently to provide simplified explanations of Komodo, and this paper is but one step forward.
To summarize the Komodo project in one sentence:
Komodo is to blockchain technology as Linux is to operating systems.
The Komodo project is an advancement in the causes of the decentralization and open-source movements; we focus on blockchain technology.
dPoW and the dICO model provide the Komodo ecosystem with security and freedom. 
Our lead developer, JL777, wrote a separate whitepaper for the dPoW security system. It approaches the dPoW topic from a more technical point of view, and may be more appropriate for readers who possess a strong knowledge of backend blockchain technology. This paper attempts to explain dPoW for the more typical entrepreneur.
The explanation of the dICO model is simplified, but it currently has no high-level technical counterpart. If you are interested in creating your own dICO, we encourage you to visit our Slack channel and speak with our team. We are actively seeking new partnerships.
We are also developing many other technologies that Komodo-ecosystem members may utilize in conjunction with dPoW and the dICO model. Watch for more information about these associated projects on our website: komodoplatform.com
- The Komodo Team, January 11, 2018
Introduction
Two of our innovations bring powerful security and freedom to the Komodo ecosystem: delayed Proof of Work (dPoW) and the decentralized initial coin offering (dICO). This paper is divided into two sections, one for each of the encompassing technologies.
Part I: Delayed Proof of Work (dPoW)
The first technology is called delayed Proof of Work (dPoW). It is a unique form of blockchain security that adopts the strength of the most powerful Proof of Work (PoW) blockchain network (currently Bitcoin), while maintaining an economical and eco-friendly approach. This enables blockchain entrepreneurs to innovate freely within the Komodo ecosystem, empowered with Bitcoin-level security, without the excessive overhead costs. 
The dPoW technology is rooted in the native Komodo blockchain (KMD) and is managed by democratically elected “notary nodes.” Notary nodes are a special type of blockchain miner that have the ability to “notarize” (that is, to make backups of) the Komodo blockchain by inserting KMD records into the chosen PoW blockchain (currently Bitcoin). By relying on these backups, a single surviving copy of the Komodo blockchain can serve to rebuild the entire Komodo ecosystem after even the most devastating of attacks. It is therefore essentially impossible to destroy Komodo without also destroying the PoW network upon which it relies.
Part II: The Decentralized Initial Coin Offering (dICO) on the Komodo Platform
The second technology we present here is the decentralized initial coin offering (dICO). This is a method of releasing a new blockchain product—be it a coin, token, or other asset—to the public at large without having to endure the rigorous and often manipulative process of a centralized initial coin offering (ICO). As new blockchains are extremely vulnerable to hostile attacks, dICO entrepreneurs have the option of relying on our dPoW consensus mechanism for security.
We created a simplified process for the entrepreneur seeking to create a new blockchain product in the Komodo ecosystem. This provides entrepreneurs with efficiency, freedom, cost-effectiveness, and security. The two most complicated aspects of creating a new blockchain are creating the code itself and generating the blockchain currency coins. We have condensed these intricate tasks into two simple commands that can be executed by any average computer user. 
When creating a Komodo asset chain, the entrepreneur clones the base code of the Komodo blockchain (KMD), and then connects this new asset to the rest of the Komodo ecosystem. The base code is designed to enable these new coins to recognize each other natively (via Komodo’s BarterDEX technology). Being connected to the Komodo ecosystem allows the new coin to enjoy future updates provided by the Komodo team. Furthermore, because the new asset is a fully independent blockchain, the entrepreneur may also choose to leave the Komodo network to stand on their own at any time.
To release the new blockchain coins to the public, the entrepreneur can take advantage of Komodo’s BarterDEX technology, as a part of our dICO model. BarterDEX is our atomic-swap powered decentralized exchange. Readers may find more detailed information about it in the BarterDEX whitepaper. 
In short, BarterDEX allows people to trade cryptocurrencies directly with each other (peer-to-peer), without a middleman (i.e. no centralized exchanges, escrow services, or proxy tokens). BarterDEX therefore eliminates many of the risk factors found in existing cryptocurrency-exchange methods. Furthermore, a dICO entrepreneur benefits from BarterDEX, in particular, because it allows them to release their new product directly and immediately to the public. It also affords a level of security and efficiency that only atomic-swap decentralization can provide. 













Part I: Delayed Proof of Work
A Foundational Discussion of Blockchain Security
Delayed Proof of Work technology (dPoW) builds on the most advanced form of blockchain security in existence, Proof of Work technology (PoW). To understand the value of dPoW, we must first explain how PoW works and why it is the most secure method of maintaining a decentralized blockchain. We must also examine PoW’s shortcomings, so that we may understand the need for Komodo’s dPoW consensus mechanism and the advantages it provides to the blockchain community. 
To understand how PoW technology functions, we begin by explaining the roots that make the Bitcoin protocol a viable means of securely transferring value.
What is a Consensus Mechanism?
The “Double Spend” Problem
The creation of blockchain technology stems from the early mathematical studies of encryption using computer technology.
One such example is related to the information-encoding device invented by the Nazi Germans during World War II, named “Enigma”. Alexander Turing, a British Intelligence agent, famously beat the Enigma device by inventing the world’s first “digital computer.” This provided enough computing power to break Enigma’s encryption and discover Nazi secret communications.
This early affair with encryption set off a race throughout the world to develop myriad forms of securely transferring information from one party to another via computer technology. While each new form of computer encryption provided more advantages, there remained one problem that prevented encryption from being useful as a means of transferring not just information, but also financial value.
This challenge is known as the “Double Spend” problem. The issue lies in the ability of computers to endlessly duplicate information. In the case of financial value we need to know three things: who owns a specific value; the time at which that value is owned by that person; the wallet address in which the value resides. When transferring financial value from one person to another, it is essential that if Person A sends money to Person B, Person A should not be able to “copy/paste” the same money and send it again to Person C. 
The Bitcoin protocol, invented by an anonymous person (or persons) claiming the name of Satoshi Nakamoto, solved the Double Spend problem. The underlying math and computer code is both highly complex and innovative. For the purposes of this paper we need only focus on the aspect of the Bitcoin protocol that solves the Double Spend problem: The Consensus Mechanism.
The Consensus Mechanism Provides Security Against a “Double Spend”
The Consensus Mechanism invented by Nakamoto is perhaps one of the most powerful innovations of the twenty-first century. His invention allows individual devices to work together, using high levels of encryption, to securely and accurately track ownership of digital value (be it financial resources, digital real estate, etc.). It performs this in a manner that does not allow anyone on the same network (i.e. the Internet) to spend the same value twice. 
Let us suppose a user, Michael, indicates in his digital wallet that he wants to send cryptocurrency money to a friend. Michael’s computer now gathers several pieces of information, including any necessary permissions and passwords, the amount that Michael wants to spend, and the receiving address of his friend’s wallet. All of this information is gathered into a packet of data, called a “transaction,” and Michael’s device sends the transaction to the Internet.
There are several types of devices that will interact with Michael’s transaction on the Internet. These devices will share the transaction information with other devices supporting the cryptocurrency network. For this discussion, we need only focus on one type of device: a cryptocurrency miner.
 
Note: The following descriptions are simplified explanations of a truly complex byzantine process. There are many other strategies cryptocurrency miners devise to out-mine their competition, and those strategies can vary widely.

A Miner Competes to Add Blocks to the Network’s History, in Exchange for a Reward
Step One: Preparing the Preliminary Information
This device is performing an activity called, cryptocurrency “mining.” Let us focus now on a mining device that captures Michael’s raw transaction data. This device is owned by a tech-savvy miner, named Gus, who wants his mining device to properly process Michael’s transaction and add it to the permanent history of the Bitcoin network. 
If Gus is the first person to properly process Michael’s transaction he will receive a financial reward from the Bitcoin network. One key part of this reward is a percentage-based fee, taken from Michael’s total transaction amount. 
The Mempool is the Collection of All Raw Transactions Waiting to be Processed
Furthermore, Gus does not have just one transaction alone to mine. Rather, he has an entire pool of raw transactions, created by many people across the Internet. The raw data for each of these transactions sits in the local memory bank of each miner’s mining device, awaiting the miner’s commands. Miners call this pool of transactions, the “mempool.” Most miners have automated systems to determine the transaction-selection process, based on estimated profit.
Creating Transaction Hashes
After Gus makes his choices about which transactions he will attempt to mine (and we assume that he includes Michael’s transaction), Gus’s mining device then begins a series of calculations.
His device will first take each individual transaction’s raw data and use mathematical formulas  to compress the transaction into a smaller, more manageable form. This new form is called a “transaction hash.” For instance, Michael’s transaction hash could look like this:
b1fea52486ce0c62bb442b530a3f0132b826c74e473d1f2c220bfa78111c5082
Gus will prepare potentially hundreds of such transaction hashes before proceeding to the next step. 
One important thing to understand about the compression of data in the Bitcoin protocol, including the transaction hash above, is that calculations herein obey a principle called ‘The Cascade Effect’. 
The Cascade Effect: Changing One Bit of Data Changes The Entire Result
The Cascade Effect simply means that if Gus attempts to change even a single bit in the raw data (whether from a desire to cheat, by mistake, or for any other reason) the entire transaction hash would dramatically change. In this way, the mathematical formulas in the Bitcoin protocol ensure that Gus cannot create an improper history. 
If Gus, for whatever reason, changed the data in Michael’s transaction (and therefore created an incorrect hash) the other miners on the network (who are also verifying Michael’s transaction) would use the same mathematical processes and arrive at a different hash value. They would immediately discover that Gus’s hashes are incorrect. Thus, the devices on the network would reject Gus’s incorrect attempts, and prevent him from claiming any resulting rewards.
Step One Continued: Finishing the Preliminary Calculations
Using different mathematic formulas, Gus takes all of the transaction hashes he is attempting to process and compresses them into a new manageable piece of data. 
This is called the “merkle root.” It represents all of the transactions that Gus hopes to process, and from which he hopes to gain a reward. Gus’s merkle root could look like this:
7dac2c5666815c17a3b36427de37bb9d2e2c5ccec3f8633eb91a4205cb4c10ff
Finally, Gus will gather information provided from the last miner that successfully added to the permanent blockchain history. This information is called, “the block header.” It contains a large amount of complex data, and we won’t go into all the details. The one important element to note is that the block header gives Gus clues about how to properly add the next piece of information to the permanent Bitcoin history. One of these hints could look like this:
"difficulty" : 1.00000000
We’ll come back to this clue in a bit. 
With the merkle root and block header, Gus is nearly prepared. His next step is where the real challenge begins.
Step Two: 
The Race to Finish First
Gus’s computer takes this data and puts it into a data set called a “block.” Mining this block (verifying the transactions) and adding it to the list of blocks that came before it is the process of creating a “chain” of blocks—hence the industry title, “blockchain.”
However, adding blocks to the blockchain is not so easy. While Gus may have everything up to this point correctly prepared, the Bitcoin protocol does not yet give Gus the right to add his proposed block to the chain. 
The consensus mechanism is designed to force the miners to compete for this right. By requiring the miners to work for the right to mine a new valid block, competition spreads across the network. This provides many benefits, including time for the transactions of users (like Michael) to disseminate around the world. This provides a level of decentralization to the network. 
Although Gus would prefer to immediately create a new valid block and collect his reward, he must win the competition by completing his work before other miners. This is where the term “Proof of Work” comes from.
The competition that Gus must win is to be the first person to solve a simple mathematical puzzle, designed by Satoshi Nakamoto. To solve the puzzle, Gus guesses at random numbers until he discovers a correct number. The solution is determined by the complex internal formulas of the consensus mechanism and cannot be discovered by any means other than guessing. Bitcoin miners call this number, a “nonce.” (A ‘number’ you use ‘once’.)
Gus’s mining device will make random guesses at the nonce, one after another, until the solution is found. At each attempt, Gus will first insert his proposed nonce into the rest of his block. To find out if his guess/nonce is correct, he will use the mathematical formula (hash) to compress his attempt into a ‘block hash’.
A block hash is a small, manageable form of data that represents the entire history of the Bitcoin blockchain and Gus’s proposed block. A block hash can look like this:
000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f
Recall now the Cascade Effect and how it states that changing one small number in the data before performing the hash vastly changes the hash outcome. Due to the fact that Gus is continually including new guesses at the nonce with each computation of a block hash, each of Gus’s attempts to hash the block will produce a wildly different sequence of numbers.
Miners on the Bitcoin network know when a miner, such as Gus, solves the puzzle by observing the clues that were provided earlier. Recall that the last time a miner successfully added data to the blockchain they provided these clues in their block header. One of the clues from the previous block header looked like this:
 "difficulty" : 1.00000000
This detail, “difficulty,” tells miners how many zeros should be at the front of the next valid block hash. When the difficulty setting is the level displayed above, it tells miners that there should be exactly ten zeros at the beginning of the next valid block hash.
Observe Gus’s attempted block hash once again, which he created after making a guess at a nonce, adding this proposed nonce into his block and performing the mathematical formulas:
000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f
The block hash above has ten zeros at the beginning, which matches the number of zeros in the difficulty level.
Therefore, the hash that Gus proposed is correct. This must mean that he guessed a correct nonce. All the miners on the network can prove for themselves that Gus was correct by taking all of the same information from their mempools, adding Gus’s nonce, and performing the proper mathematical calculations. When they receive the same result, Gus will be the winner of this round. 
On the other hand, due to The Cascade Effect, if Gus’s attempted nonce had produced a block hash with the incorrect number of zeros at the front, his block hash would be invalid. The network would not afford him the right to add an incorrect block hash to the network, and all the miners would continue searching.
Step Three: 
Gus Finds the Nonce
Once a miner discovers a nonce that produces a valid block hash, the miner has “found a new block,” and can send the signal across the Internet. The consensus mechanism running on every other mining device can verify for themselves the calculations. Once verified, the consensus mechanism grants the miner the right both to add the proposed block to the blockchain, and to receive the reward. 
Let us return to Gus’s machine, having just guessed a correct nonce, and thus holding a valid block hash. Gus’s machine instantly sends out the winning information across the Internet, and Gus collects his reward from the Bitcoin network. 
All of the other miners on the Internet now have to readjust. Earlier, they were searching for the correct nonce based off the information from the previous block header. However, Gus’s new valid block introduces a new block header. All of the other miners on the network abandon their current work, adopt Gus’s new block header, make recalculations in their underlying data, and begin their search for the next nonce.
There is no sympathy in the Bitcoin protocol for any miner’s wasted efforts. Suppose another machine on the network was also trying to mine Michael’s transaction, and lost to Gus in the race. Only Gus earns the reward from Michael’s transaction, and the other miner receives nothing in return for their costs and time. 
For Michael, all of this process seems fairly simple. He first indicated the wallet address of his friend, and sent cryptocurrency. After a certain amount of time, his friend received the money. The backstage process of the miners that occurred between these two events is invisible on the surface to Michael. He may not realize it, but the PoW consensus mechanism provides the foundation of security upon which he relies.
PoW is Currently the Most Secure Form of Consensus Mechanism
There are several reasons why PoW networks, especially Bitcoin, continue to dominate in terms of security and blockchain success. A simple, preliminary reason is that PoW networks foster ever-increasing speed and computer power. Miners must constantly update and innovate above their competitors to continue earning rewards.
The most notable reason behind PoW’s success is the Longest Chain Rule. This rule can also be dangerous to the unwary and unprepared entrepreneur of a new blockchain product.
Speed and Power are of the Essence
Among miners, having a faster and more powerful computer can mean earning rewards more frequently. For miners seeking to maximize profit, competition to continually upgrade their machinery and to improve their underlying code is fierce and constantly expanding.
The frequency at which a device can create proposed block hashes is called “hash power.” The more hash power a collective PoW network has across all miners mining the blockchain, the more secure the network. This competitive pressure provides one important advantage in security to PoW networks, compared to alternate consensus mechanisms.
The Network Effect: Bitcoin’s Ability to Dominate Begins
A high level of security fosters a sense of trust among users, and this can grow a PoW network’s audience. As the audience grows, both the number of transactions and the price of the coin increase. This attracts more miners. The rising level of miners provides greater overall hash rate to the network, which in turn fosters a stronger sense of trust. The increased sense of security can raise the number of users on the network, which can increase the number of miners, and the cycle repeats. 
In economics this is classified as a “Network Effect,” where a cycle of behavior encourages more of the same behavior, with compounding interest. Due to the Network Effect, and the fact that Bitcoin is the oldest PoW network, Bitcoin is increasing its security at a rate faster than the rate of other PoW networks.
Furthermore, consider the effect caused when the price of a PoW-blockchain coin rises. Before the rise, assume the blockchain coin is worth one dollar. A miner is justified in spending the necessary money (on equipment, upgrades, and electrical costs, etc.) to justify one dollar’s worth of hash rate. If the price shifts upwards to two dollars, the miner must upgrade their entire business to justify two dollar’s worth of a matching hash rate. If the miner does not upgrade, their competitor will, and then the miner will no longer be able to compete for rewards.
The Longest Chain Rule: The “Secret Sauce” of PoW Domination
There are many more reasons why PoW networks continue to dominate in security. But the one we want to talk about here is “The Longest Chain Rule.” Some argue that it is “the secret sauce” that fuels PoW’s strength.
The Longest Chain Rule simply states that in the event that two competing versions of the blockchain history arise on the network (each properly created with valid, but differing block hashes), the network declares the chain that grows longer first to be the winner. The other version is overwritten, and thus all transactions and rewards on that version are erased. The simplicity of this rule is a key to understanding why PoW consensus mechanisms continue to outperform their competition.
The Simple Effects of The Longest Chain Rule
On a surface level, this rule prevents a double spend by a network user. For instance, consider a husband and wife accidentally attempting to spend the same money at the same time while each person is traveling in a different part of the world. 
Komodo Team Note: For the sake of the discussion, we are vastly oversimplifying actions so that they take place within only a few milliseconds. We are also oversimplify the technical details for clarity. The full explanation of this process is provided in the Bitcoin wiki, for those who would like to gain a deeper understanding.
A Tale of Two Blockchains
Let us suppose that the husband is in Asia and the wife is in the Americas. Each decides to purchase a car. The husband uses all of the funds from the family Bitcoin wallet to make his purchase at precisely 8:00 PM (UTC). The wife makes her purchase in the Americas at the exact same moment, for a similar amount.
After making his purchase, the husband’s transaction hash is immediately sent to a mining device in China, where it is held in the miner’s local mempool (recall that a mempool is a collection of all raw transaction data across the network). 
Let us suppose that the husband’s transaction arrives in the Chinese miner’s mempool at the exact moment that the Chinese mining equipment finds a correct nonce and a valid block hash. The Chinese miner declares the winning information, mines a new block, and collects a reward. All of the miners in his local (Asian) vicinity (who receive the winning information faster than in the Americas, due to proximity) complete the block verification process, increase the length of the blockchain, and begin searching for the next valid block hash.
On the opposite side of the world, essentially the exact same actions happen. The wife’s transaction is sent to the nearest miner, this time located in Washington state of the United States. Just as the transaction enters the Washington state miner’s mempool, the miner discovers a valid block hash. He sends out the signal, mines a new block, and also collects the reward (this is the same reward that the Chinese miner is attempting to claim). All of the miners in the local (US) vicinity verify the information immediately, and begin searching for a new valid block hash based on the Washington state miner’s recent block.
An Internal Conflict of Interest Arises Within the Bitcoin Network
Note the paradox here. There are now two versions of the Bitcoin history that are valid, yet different. 
These two versions make their way across the Internet, around the world, each to the other side. When the competing messages arrive, the Bitcoin protocol sees that there is a conflict. The same money was spent twice. 
Consider how on each side of the world the miners are spending their financial and temporal resources to further their own interests. This means that there is no economic incentive for either side to submit to the other, by nature. Therefore, there is a conflict of interest within the Bitcoin network itself. The Bitcoin network would swiftly fail, were it not for The Longest Chain Rule.
The Longest Chain Rule: The Chain Which is Longer First Becomes History
The Longest Chain Rule simply declares that whichever of the two competing blockchains grows longer first, wins. The consensus mechanism erases the other version.
Let us suppose that the Chinese mining equipment is superior in this instance, and the Chinese miner manages to discover the next valid block hash and send out the signal before the Washington state miner can. The moment the information that the Chinese miner completed yet another valid block is broadcast around the world, the Bitcoin protocol erases the Washington state miner’s version of the Bitcoin history.
There is no sympathy for any wasted efforts, nor any misunderstandings between the wife and her car dealer. The Bitcoin protocol’s consensus mechanism simply presses forward. The Washington state miner’s rewards disappear, as though they never occurred. The wife’s purchase of a car likewise evaporates. 
(Typically, a normal and prepared car dealer utilizing cryptocurrency would not consider a customer’s transactions acceptable until several new blocks were added to the blockchain history. In this manner, cryptocurrency users can ensure that a transaction is beyond contest before before driving a new car off a lot.)
The Washington state miner gets a raw deal in this scenario, but the network benefits as a whole. The Longest Chain Rule provides the necessary security to prevent a Double Spend. The network accurately recorded one family member’s purchase of a car, prevented a double spend, and ensured that the most competitive miner received a fair reward. 
This example illuminates the importance of The Longest Chain Rule. However, there is a dark side to this rule for the unsuspecting and unprepared blockchain developer. 
The “Easy” Way to Destroy a PoW Network: The 51% Attack
Here’s where intrigue enters the picture. The “easiest” way to steal money on a PoW blockchain (such as Bitcoin) is to perform a 51% Attack.
In this attack, the malicious actor spends cryptocurrency in exchange for something of value. Next, they create an alternate version of the PoW network’s history wherein those transactions never took place. Using advanced mining equipment, the malicious actor then “attacks” the PoW network by mining blocks to this “false” history faster than the rate at which other miners on the PoW network are mining blocks to the “true” history.
Assuming the malicious actor has a sufficient hash rate, as this “false” history grows longer than the “true” history the Longest Chain Rule will cause the consensus mechanism to overwrite the “true” version. The earlier transactions the malicious actor made would never have occurred according to the blockchain. Therefore, the malicious actor would keep both their original funds and whatever item of value they exacted from their purchase.
This is known as The 51% Attack. The number 51% derives from the fact that to successfully perform this attack, the attacker must add enough hashing power to the overall PoW network to form a majority of the hash rate.
Size is Yet Another Reason Behind Bitcoin’s Current Success Among PoW Networks
Today, Bitcoin’s overall hash rate is enormous. The collective of computers around the world mining Bitcoin is effectively the largest supercomputer ever created by man. As of the writing of this paper, some estimate that the Bitcoin network consumes more electricity than the entire country of Denmark. The number of miners continues to grow.
Therefore, to attempt a 51% Attack on the Bitcoin network could cost millions or billions of dollars in computer hardware. It would also require a sustained consumption of electricity that is likely unfeasible for a single geographical location. So long as the miners of Bitcoin remain interested in the Bitcoin network Bitcoin has a level of security that is close to impenetrable. 
We will return to the proposition of the miners’ ability to choose a different network to mine, later.
The “Hard” Way to Destroy a PoW Network: The Genesis Attack
A Genesis Attack on the Bitcoin Network
Recall that according to the original version of the Bitcoin protocol, sometimes called the “vanilla” version, The Longest Chain Rule only requires that the blocks in the longest chain all be properly mined. Also recall that computers can endlessly duplicate code.
Finally, note that in the course of our explanation when describing a malicious actor’s attempt to create an empty, meaningless blockchain history we use quotation marks when employing the word, “false.” Likewise, when describing the blockchain history trusted by the rest of the people on the network, we include the word “true” in quotations. 
We do this because at the core level the consensus mechanism is purposefully blind regarding any human user’s preference between “true” and “false.” The code only sees “true” in terms of properly forged blocks, and overall blockchain length. Nothing more.
Now suppose the existence of a supercomputer a thousand times more powerful than the entirety of the Bitcoin miner network. This supercomputer could, in theory, stealthily re-create and execute the initial code that spawned the very first block of the Bitcoin blockchain—the “Genesis Block.” The supercomputer could then grind out block hashes, one-by-one, mining meaningless blocks and adding them to this empty, “false” version of the Bitcoin history. 
Once this meaningless blockchain’s length sufficiently exceed the so-called “true” blockchain used today, the supercomputer could then release its “false” version to the Internet.
Throughout the world, (assuming the vanilla protocol) the Bitcoin network would automatically recognize the “false” blockchain as the correct blockchain! This would all be according to the code. The so-called “false” blocks would be properly mined, and the length would be longer than the chain that users currently trust. The vanilla protocol would, in theory, replace the so-called “true” history with the empty variant.
It might seem to users like a virus being uploaded to the Internet. It could destroy all human trust in the current version of the Bitcoin protocol, wreaking financial havoc throughout the cryptocurrency realm. While users of the Bitcoin protocol would naturally protest, the entire operation would be entirely in agreement with the underlying code.
Nevertheless, when observing Bitcoin’s current hash power, the creation of such an anti-Bitcoin supercomputer is clearly not feasible in the immediate future. Assuming Bitcoin miners remain interested in the Bitcoin network, the risk of a Genesis Attack on Bitcoin is essentially non-existent. 
However, consider the implications of the Genesis Attack on unsuspecting or underprepared smaller PoW blockchain projects. 
The More Realistic Dangers of The Genesis Attack
Let us assume a naïve entrepreneur is building a new product. They are generally aware that malicious actors throughout the world are likely to attack their blockchain, stealing funds and otherwise causing trouble. Therefore, they decide to implement what they believe is the most secure method of a blockchain consensus mechanism, PoW, and offer ample financial rewards to miners to incentivize a secure network. 
The entrepreneur and their entire audience may not realize it, but so long as their network’s overall hash rate remains below the threshold of an attack by even an average supercomputer, their entire blockchain history is vulnerable to complete annihilation. A technically astute competitor, seeing the vulnerability and possessing ownership of the requisite computer hardware, would be able to create an empty and longer version of the same blockchain code and vaporize their competitor’s financial records.
The cryptocurrency industry is young, and only the most advanced of developers understand the many ways in which blockchain competition can be eliminated. Fortunately, we have seen only a few serious cases of The Genesis Attack. One notable instance occurred when an original Bitcoin developer, Luke-jr, used a variation of the attack to destroy a blockchain project called Coiledcoin. Luke-jr performed the attack out of a belief that Coiledcoin was a disingenuous project. Setting aside any opintion on either side of the event, the fact stands that Luke-jr’s variation of The Genesis Attack was the end of the Coiledcoin network.
The complexity in establishing a secure PoW blockchain remains a challenge for beginning entrepreneurs. Furthermore, there are existing PoW developers that are not fully aware of their vulnerability. Likewise, there are malicious actors that have yet to realize the many methods available to cause frustration. The potential danger surrounding the issue of The Genesis Attack shows the relative youthfulness of the cryptocurrency industry as a whole.
For a PoW blockchain network to maintain Bitcoin-level security it must maintain a hash rate that is high enough to constantly mine blocks faster than a potential competitor could either perform The 51% Attack (destroying the most recent of transactions), or a malicious entity could perform the deadly Genesis Attack. 
The Financial and Eco-Unfriendly Problems With All PoW Networks
The problems with young PoW networks do not stop there. Even Bitcoin’s PoW network has issues. The security of a PoW network comes at a high cost to the environment and miners have no obligation to mine any particular network.
PoW Networks Are Expensive
Some estimate that by 2020, the Bitcoin network alone will consume more electricity than the entire world currently consumes (as of 2017). Having just one PoW network in existence, therefore, is already strain enough on our environment. It is also a strain on our infrastructure and worldwide economy. 
Adding additional PoW blockchains to the world can serve the purpose of forcing free-market competition on the Bitcoin developers. This will encourage ethical and innovative behavior. Therefore, some competition among PoW networks is likely useful. 
However, as a human species, we can consider that there are more financially sound and eco-friendly methods of innovating with blockchain technology without always directly competing with Bitcoin PoW security. Our innovation, delayed Proof of Work, is one response to this fact.
Another Dilemma: Miners are Free to Mine Other Networks
In November 2017, for few hours the majority of Bitcoin network miners switched their hash power to a competitor’s PoW network, the “Bitcoin Cash” network. This switch was the result of clever software engineering on the part of the Bitcoin Cash team. 
The team recognized that most miners on the Bitcoin network are set to automatically mine whichever network is most profitable. Therefore, the team conducted a calculated change in their underlying protocol that caused the profitability of the Bitcoin Cash network to dramatically increase. The majority of world’s Bitcoin mining equipment, running via automation, recognized the higher profitability and switched to the Bitcoin Cash network automatically. 
While the Bitcoin Cash’s play for a majority hash rate only proved effective for a matter of hours, their accomplishment raised awareness as a whole to a tacit principle in the network: Bitcoin’s hash rate is not bound to Bitcoin. The hardware operated by the miners is free to serve any compatible network they choose.
At the moment of the writing of this paper, between Bitcoin and Bitcoin Cash, ~80% of the available hash rate is aligned with the former, and ~20% with the latter. There is speculation in the industry that if the Bitcoin Cash network creates a more favorable position, the balance of hashing power could change on a long-term basis. Furthermore, there are many other blockchain competitors who may gain the attention of Bitcoin’s miners in the future.
If a shift in the balance of hash rate were to occur, Bitcoin would no longer be the leader of security in the cryptocurrency realm. The price of Bitcoin would likely drop if users realized the resulting lack of security leadership. Therefore more miners might choose to switch to a more profitable network to cover the cost of operating their expensive hardware. This could create the reverse instance of The Network Effect, where the Bitcoin network would come crashing down at an increasing rate.
This is all theoretical, but it raises yet another concern that we need to illuminate - the security of a blockchain depends on many things, including the potentially fickle support of human blockchain miners. Our innovation, delayed Proof of Work (dPoW), takes this fact into account as we empower members of the Komodo ecosystem with Bitcoin-level security. Before we finally turn to our own solution, we must discuss the primary competitor to the PoW consensus mechanism, Proof of Stake (PoS).
The Primary Alternative Consensus Mechanism: Proof of Stake
Perhaps the most popular alternative consensus mechanism is Proof of Stake (PoS). In this mechanism, blocks are mined not by miners performing work, but rather by any user “staking” their coins on the open network for the right to mine blocks. 
The meaning of “staking” has different variations depending on the specific rules set forth by the developers of the unique variant of the PoS consensus mechanism. In general, staking one’s coins means placing them as collateral on the open network in exchange for the right to mine new blocks. 
Users who stake their coins are able to periodically extract a portion of the mempool, mine new blocks, and earn rewards. There is no need to perform any hardware-expensive proof-of-work calculations as the user’s incentive to be honest is encouraged by the fact that their own wealth hangs in the balance.
The Security Risks and Shortcomings of PoS
The downside to PoS is that a user who simply leaves a large portion of wealth staked (and therefore continually claiming rewards) gradually becomes a centralized point of wealth through the power of compound interest. On PoS networks, monopolies are a constant danger. The owner of a monopoly has power over the well-being of the network.
Once a majority of the supply is obtained, the owner gains a position known as “Nothing At Stake.” The owner can mine “false” blocks to the PoS blockchain and use their majority supply over the network to declare these “false” blocks valid. All other stakeholders on the network must adopt these “false” blocks, lest the majority holder use their position to declare competing blockchain versions invalid. If a minority holder attempted to challenge the majority holder’s version, the minority holder wouldn’t be able to do much beyond lose the coins that they put up for stake.
While PoS can be a useful alternative, it has yet to produce a network with the same level of security as the PoW consensus mechanism. The latter does not suffer from the risk of a monopoly, as majority holders gain no unique control over the mining of new blocks.
There are, however, scenarios in which PoS can be useful for entrepreneurs. In the Komodo ecosystem, our dPoW consensus mechanism is capable of providing security to both types of consensus mechanisms built on our platform. 
Following a brief summary, we finally turn our attention to our dPoW consensus mechanism.
A Summary of the PoW Consensus Mechanism
In short, the PoW consensus mechanism as designed by Satoshi Nakamoto is currently the most sound method of blockchain security. It solves the Double Spend problem and creates a secure network capable of transferring financial value. Furthermore, competition among miners and The Longest Chain Rule create fairness on the blockchain. The Longest Chain Rule provides a high level of defense against two of the most dangerous methods of blockchain destruction, the 51% Attack and the Genesis Attack.
New PoW blockchains can opt to compete directly with Bitcoin’s hash rate. While some level of competition is good for the ethical values and innovative power of the cryptocurrency industry, it is not necessary, cost-effective, or eco-friendly for every new blockchain innovation requiring security to attempt to compete directly with Bitcoin. Not only is this unsustainable, but it is also unreliable as it depends on the arbitrary choices of the decentralized network of miners around the world.
The Komodo Solution: Delayed Proof of Work (dPoW)
Introduction to Delayed Proof of Work
Komodo presents a technology, the delayed Proof of Work consensus mechanism, that solves the problems described above. Komodo’s unique consensus mechanism provides the same level of security as the strongest PoW network, without attempting direct competition. Instead, Komodo’s consensus mechanism uses a chosen PoW network as a storage space for “backups” of Komodo transactions. By this method, in the event of a devastating attack, a single surviving copy of the Komodo main chain can serve to rebuild the entire Komodo ecosystem.
In a key difference separating Komodo from regular PoW networks, our dPoW consensus mechanism does not recognize the Longest Chain Rule. Instead, to resolve a conflict in the Komodo network, the dPoW consensus mechanism looks to backups it inserted previously into the chosen PoW blockchain.
Furthermore, asset chains in the Komodo ecosystem can likewise elect to have backups of their own records inserted into the Komodo main chain. (Forks can backup on Komodo.) These asset chains also do not recognize the Longest Chain Rule, but instead look to the Komodo main chain to resolve conflicts. 
So to destroy even the smallest asset chain that is employing the Komodo ecosystem’s dPoW security, the attacker would have to destroy a) all existing copies of the asset chain, b) all copies of the Komodo main chain, and c) the accompanying PoW security network into which the dPoW backups were inserted. This endows the Komodo ecosystem with Bitcoin-level security, while avoiding the excessive financial and eco-unfriendly costs.
Democratically elected notary nodes have the freedom to switch notarization to another PoW network. Reasons the notary nodes might elect to switch networks could include the event that worldwide miners’ hashing power changes to another PoW network, or the cost of notarization to the current PoW network becomes more than necessary. Through this flexibility, the Komodo ecosystem maintains both a superior level of security and a more flexible and adaptive nature than Bitcoin itself.
A Note About Komodo’s Iguana Core Technology
All of the following processes are supported by a deeper Komodo technology called Iguana Core. Readers of Komodo-related whitepapers will note that Iguana Core is at the heart of most Komodo projects, providing the underlying technology to make the vast Komodo ecosystem work together. The Iguana Core code itself is exceedingly complex and more in-depth than this paper will go into. 
In short, Iguana Core is a collection of code that serves many purposes. One function of Iguana Core is to empower the blockchain technologies Komodo uses to act in coordination with each other. Often times, Iguana Core can advance initial capabilities beyond original expectations. In the case of dPoW, the code that underlies notary-node functionality is spawned from Iguana Core technology.
Iguana Core is coded in the C programming language—the language of choice of our lead developer, JL777.
The Notarization Process
The First Step: 
Gathering the Appropriate Data
The process of inserting backups of Komodo transactions into a secure PoW network is called “notarization.” The democratically elected notary nodes in the Komodo ecosystem perform this process via automation provided by Iguana Core. 
The process of notarization is simple. Roughly every ten minutes, the notary nodes perform a special block hash mined on the Komodo blockchain and take note of the overall Komodo blockchain “height” (i.e. the number of total blocks in the Komodo blockchain since its inception). The notary nodes process this specific block in such a manner that their signatures are cryptographically included within the content of the notarized data. 
The pieces going into the notarization process could look like this:
0a88371cc63969d29492110592189f839557e606db6f2b418ecfe8af24451c07
This is the “block hash” from the KMD blockchain—mined and cryptographically signed by the notary nodes.
Block 607240
This is the blockchain “height” of the Komodo blockchain at the time of notarization (i.e. the total number of KMD blocks ever created).
KMD
The letters “KMD” are added into the notarization mixture to indicate the name of the blockchain to which this notarization belongs.
The notary nodes will take these three pieces of information and compress them into a format that is more computer-friendly. The final result (the hash) will look like this:
6a28071c4524afe8cf8e412b6fdb06e65795839f189205119294d26939c61c37880a084409004b4d4400
The above number can be said to be a cryptographic representation of all that has happened on the Komodo blockchain up to this point in time. If an attacker were to attempt to go back in the history of the Komodo blockchain and change even a single character of data the number above would dramatically change. (I.e. the hash result would be different.)
This makes the notarization a useful backup, assuming this number is in a safe location where anyone on the Internet can view and verify it. It enables a single surviving copy of the true Komodo main chain to identify itself to the rest of the Komodo network as the correct version. Only the true data will produce the correct hash. An incorrect history of the Komodo network will not be able to produce the correct hash. All nodes on the Komodo network will align with the blockchain history using the correct hash result and overwrite any attempts which cite anything other than the correct hash.
Step Two: 
Notarizing the Data to a Secure Location
It would be insecure for the correct hash to be stored in a single location. This would allow an  attacker to potentially destroy the backup or replace it with a “false” version. For the hash to be useful it must be placed in a secure and decentralized location. 
Here is where Komodo adopts security from another network. Komodo will perform a simple transaction in which it writes the hash to the data history of the strongest PoW blockchain (currently Bitcoin). This location is as secure as the miners’ hash rate makes it, and the location is decentralized, by nature.
To place this information in the accompanying PoW network, the notarizing nodes will use a feature that exists at the core of the Bitcoin protocol when making a transaction. The feature is called “OP_RETURN,” and it allows for a message to be added to the blockchain permanently alongside the transaction hash.
A notable use of the ability to write messages to a blockchain is found in the first actions of Satoshi Nakamoto himself (themselves). In the first Bitcoin block ever mined, Satoshi used a feature similar to OP_RETURN to include this message alongside the accompanying transaction:
03/Jan/2009 Chancellor on brink of second bailout for banks
Readers who have downloaded the Bitcoin blockchain to their local computer, and who possess the knowledge necessary to inspect the raw Bitcoin data, can discover these very words written to their own hard drive. The important thing to understand for our discussion is that any message written to a secure and decentralized PoW blockchain is viewable and verifiable to all.
The permanence and security of OP_RETURN messages are a core aspect of dPoW’s security. In the event of an obliterating attack on the Komodo network a single surviving copy of the Komodo blockchain would mean there is no argument over the correct notarized marker upon which the ecosystem members should rely. The Iguana Core code and Komodo blockchain can automatically turn to the chosen PoW network to rebuild.
The Third Step: 
Notarizing the PoW Network Information Back to the KMD Main Chain
One final step remains to complete the loop of security between the KMD main chain and the chosen PoW network. The KMD blockchain needs to remember where it placed this backup into the PoW blockchain. This reminds the Komodo ecosystem where to look for the proper information. 
The notary nodes will gather one more piece of information, this time drawn from the accompanying PoW network. This is the transaction hash (txid), identifying the location where the first notarization was placed. 
313031a1ed2dbe12a20706dff48d3dffb0e39d15e3e4ff936d01f091fb3b8556
The notary nodes will combine the txid with all of the information that has come before. The final result will be transformed into a computer-friendly version that looks something like this:
6a28071c4524afe8cf8e412b6fdb06e65795839f189205119294d26939c61c37880a0844090056853bfb91f0016d93ffe4e3159de3b0ff3d8df4df0607a212be2deda13130314b4d4400
As before, this number is a compressed cryptographic representation of everything that has happened in the Komodo ecosystem up to this point in time. 
This notarization is placed as a transaction message directly into the KMD main chain. This enables the Komodo ecosystem to know how to find a reference of its own history, should the need ever arise.
A Brief Discussion of Komodo’s Protective Measures in Action
There are many ways that an attacker can assail a blockchain project, and the Komodo ecosystem is well prepared. In this foundational paper, we only discuss two of the most crucial attacks—The 51% Attack and The Genesis Attack. 
In the accompanying technical whitepaper (written by our lead developer, JL777) we provide several more discussions on how Komodo responds to many other forms of attack. Some mentioned in JL777’s whitepaper include the Sybil Attack, Eclipse Attack, the Double Spend, and more. We encourage any reader searching for information about the deepest levels of Komodo security not only to read the accompanying whitepaper, but also to reach out to our team directly on our Slack channel.
Notary Nodes and Iguana Core Provide a Defense Against The 51% Attack
Any technically savvy user can activate a device capable of mining the Komodo network and mine blocks to receive rewards. For these miners, the Bitcoin protocol functions normally. With each block header, clues are provided for miners to find the next valid block hash. The specific clue, “difficulty,” changes with each block header.
Understanding “Difficulty” on a PoW Chain
On a regular PoW chain, the “difficulty” clue is even more pertinent to our discussion. With each block header, the difficulty level can change. The Bitcoin protocol itself decides what the difficulty for the next valid block should be.
The difficulty is decided based on the amount of overall hash power mining the network. If many miners are mining the network, then the hash rate is high, and the Bitcoin protocol sets the difficulty to a higher number. On the other hand, if the hash rate is low, then the protocol sets the the difficulty to a lower number.
Recall that the “difficulty” level determines the number of zeros at the beginning of the next valid block hash. The more zeros at the beginning of a valid block hash, the more unlikely each attempt at finding a valid block hash will be. 
When the Bitcoin protocol was in its infancy, the difficulty setting was easy. In fact, the block hash we used earlier as an example is, in truth, the very first block hash ever created—by Satoshi Nakamoto himself.
000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f
He (they) designed the difficulty setting to encourage the network to find new block hashes once every ten minutes, on average. 
For a computer, to guess within ten minutes a nonce that will produce a block hash beginning with ten zeros is relatively easy. It is so simple, in fact, no special computer is required. Early Bitcoin miners could use nothing more than the average desktop machine, having the CPU—the small heart of the computer—performing the calculations. 
As more miners joined the network, the Bitcoin protocol automatically increased the difficulty. This maintained the speed at which the pool of all miners discovered new blocks, despite the increased size of the pool. Stabilizing the speed ensured an amount of economic predictability upon which users could rely, among many other benefits.
Today, at Bitcoin’s current level of overall hash power, a valid block hash requires a much higher level of difficulty. Here is a recent successful block hash:
0000000000000000002d08398d6f21f038019600266b419bad5ab88add5b638d
There are seventeen zeros, and to find a valid block hash at this level requires a prodigious effort. 
In the race to win blockchain rewards, miners all over the world have built entire farms of specialized equipment for mining. The small CPU of a desktop is no longer useful, and the time of “easy difficulty” on Bitcoin has passed.
dPoW Has Democratically Elected Notary Nodes
Here is where our dPoW consensus mechanism is able to diverge from the Bitcoin protocol’s limitations and create new levels of security for the Komodo ecosystem.
Our dPoW consensus mechanism allows for sixty-four democratically elected “notary nodes.” They are a special type of blockchain miner which have certain features in their underlying code that enable them to maintain an effective and cost-efficient blockchain. The periodic elections are held by popular vote.
The Komodo blockchain endows notary nodes with many additional abilities. These abilities help to maintain cost-effectiveness and an eco-friendly nature in the Komodo ecosystem. They also prevent the ecosystem from falling into the trap of directly competing with other networks for hash-rate security status. 
Each Notary Node Gets One Chance Per Every Sixty-Five Blocks to Mine on Easy
Notary nodes have a specific ability that enables them to protect against the 51% Attack. Each individual node periodically receives the privilege to mine a block on “easy difficulty.” It has this ability until it mines one “easy” block, and then the Iguana Core code removes the “easy difficulty” for that notary node for the next sixty-four blocks. After the sixty-four block period passes, the notary node can once again attempt to capture a block on “easy difficulty.” 
Therefore, while everyone else on the network mines at an adjustable level of difficulty according to the normal PoW consensus mechanism (which keeps the overall speed of the Komodo network relatively stable) the notary nodes have a chance to step outside the normal rules. For every sixty-five block period on the Komodo blockchain, the odds that a block will be mined by a notary node, as opposed to a normal miner, are roughly 3:1. 
Since the rest of the miners have an adjustable difficulty ratio, it does not matter how many more miners attempt to mine Komodo. The majority of the valid blocks will always be found by the sixty-four democratically elected notary nodes, even were the entire hash power of the Bitcoin network to somehow switch all of its attention to mining Komodo.
The Free-for-All Period
Every 2000 blocks the Iguana Core code removes the easy-difficulty mining ability from all notary nodes for a sixty-four block period. This gives the entire ecosystem the chance to freely mine the Komodo blockchain—and therefore the chance to control the “truth” of the Komodo history.
The Combination of Features Throttles the 51% Attack
To brute force a 51% majority over the network a malicious actor would have two challenges. They would first have to compromise the majority of the democratically elected notary nodes, and then provide a 51% majority over the network’s hash throughout the period of the Free-for-All. 
Were a malicious actor to compromise the notary nodes the most the actor could do would be to prevent further notarization—and therefore destroy their own network. Were the notary nodes to attempt to falsify the blockchain history, the Free-for-All period would allow the normal miners on the network to correct the record.
So long as Komodo-ecosystem members choose their notary nodes wisely, the 51% Attack is essentially impossible to perform against Komodo.
The Ultimate Defense Against the Genesis Attack
One of the deadliest attacks that can be unleashed on a vanilla version of the Bitcoin protocol is the Genesis Attack, which we mentioned previously. The key to successfully performing a Genesis Attack is to recreate the genesis block of the victim’s blockchain then mine a blockchain height greater than the “true” blockchain. Once this new chain is released on the Internet, the underlying Bitcoin protocol will immediately vaporize the “true” blockchain, and thus all of the owners’ financial records. 
The key vulnerability that this attack exploits is the very rule (Longest Chain) that, under other circumstances, makes a PoW network so powerful. On one hand, assuming a strong hash rate, the Longest Chain Rule provides security against attacks such as a Double Spend. This feeling of security encourages growth in the user base, incentivizing growth in the miner base. In turn, this cycle creates a Network Effect. However, if the hash rate of the PoW network is low the Longest Chain Rule creates the vulnerability of chain vaporization. 
In the Komodo project we are not attempting to directly compete with PoW networks, such as Bitcoin, for overall hash-rate security services. Our end goal is to create a secure, powerful, and open-source blockchain ecosystem with the option of privacy features. Bitcoin-level security is necessary to achieve our goals, but it does not need to be an endeavor unto itself. Therefore, we simply chose to turn off the Longest Chain Rule in our code, and instead adopt the strength of the strongest PoW network. 
In the event that an outsider were to attempt a Genesis Attack on our ecosystem, the Komodo blockchain would simply ignore this “false” blockchain history. Our Iguana Core code resolves conflicts by looking to the chosen PoW network for the historical KMD markers. This means that the Komodo ecosystem maintains Bitcoin-level security from the deadliest of attacks without obeying the Longest Chain Rule. 
The dPoW Consensus Mechanism is Inherent in All Komodo Asset Chains
All of these securities extend to any asset chain of the Komodo ecosystem. The primary difference between an asset chain and the main chain is that the main chain notarizes to an exterior PoW network (Bitcoin), whereas an asset chain notarizes to the Komodo main chain. 
Therefore, an entrepreneur in our ecosystem has the option of Bitcoin-level security, at only a fraction of the cost. The entrepreneur need only employ the notary nodes’ services to notarize backups of their blockchain to the Komodo network, and thereby be protected from even the most devastating of blockchain attacks. 
In the following “Part II” section of our Komodo Foundations paper, we begin our discussion of an entrepreneur’s formation and distribution of a Komodo asset chain.






Part II: The Decentralized Initial Coin Offering

A Preliminary Note on Technologies Integrally Related to the Decentralized Initial Coin Offering (dICO)
The dICO model in the Komodo ecosystem relies heavily on several accompanying Komodo technologies, which are important to also understand when studying the dICO vision.
dPoW
The dPoW consensus mechanism, explained in Part I of this paper, provides security for blockchain entrepreneurs. This security is essential to explore opportunities that would otherwise only be available to large enterprises.
BarterDEX
Another related Komodo technology, BarterDEX is an atomic-swap powered, decentralized exchange. This technology allows cryptocurrency users to trade their cryptocurrencies directly from person-to-person, without any third party or escrow service. Through atomic-swap technology, BarterDEX is able to provide this service in a manner that is far more secure than a typical exchange and provides more ease in accessing, managing, and trading among coins. 
BarterDEX provides the underlying power for dICO entrepreneurs to distribute their blockchain innovations to the world, with the freedom that only decentralization can provide. BarterDEX is thoroughly explained in this whitepaper.
Jumblr
Yet another necessary and related Komodo technology, Jumblr is a cryptocurrency-privacy enabler. It is capable of providing privacy to any cryptocurrency connected to the Komodo ecosystem, through the assistance of BarterDEX. The option of privacy is an inherent part of a strong and secure ecosystem project. Privacy empowers users with the ability to make choices without being directly controlled or observed by a third party. Jumblr is explained in detail in this whitepaper.
We Welcome Discussion and Feedback
To focus our current discussion, we will attempt to maintain as much clarity as possible in the dICO technical details without requiring the user to also read the BarterDEX and Jumblr whitepapers. However, the reader will naturally gain a more thorough understanding of how these products work together by reading all of the papers.
We recognize that due to the amount of material, this is time consuming. We are diligently working to create the necessary initial documentation for educational purposes (of which this paper is one step). We are also working to simplify the explanations into more manageable sizes, formats, and alternative types of media. We appreciate your patience as we undergo this process in our company growth.
As always, if you find any topic confusing, please reach out to our team on Slack and let us know what needs to be clarified. We appreciate your feedback, as it helps us create the best possible Komodo experience. Thank you.
Introduction to the Decentralized Initial Coin Offering
There lies a great power in the idea that any person, regardless of nationality, creed, or background, can obtain funding to innovate and prosper. An integral tenet of blockchain technology is “decentralization.” By decentralizing systems, we curtail control points that can be manipulated and thereby negatively impact human prosperity. Decentralization plays a more common role in our new cryptocurrency economy, but there is one area of the market that remains centralized and vulnerable: the initial coin offering (ICO). The cryptocurrency industry needs a solution, and Komodo presents an answer with our decentralized initial coin offering (dICO).
In today’s common ICO model, the high level of centralization creates many problems. Third-parties can block or manipulate entrepreneurs’ efforts to innovate and prosper. The centralized location of releasing the ICO blockchain product is vulnerable - allowing whales, hackers, and human error to corrupt or destroy an entrepreneur’s efforts. The negative experience of users in these situations can also impact the perception and adoption of cryptocurrency as a whole. Furthermore, the traceable nature of an ICO prevents society from crowdsourcing and purchasing within our inherent right to barter in private.
The dICO model, as created by the Komodo project, overcomes these challenges. It provides the necessary technology to create and release a blockchain product to the world with the full power of decentralization. 
Entrepreneurs building on our platform begin by creating an asset chain, and our technology simplifies this process. One need only install the necessary software, execute a few commands on a command prompt, and then establish a connection between two or more Komodo-enabled devices. Komodo’s core technology will do the rest of the work necessary to create a fully independent blockchain, empowered with an array of Komodo features. 
Our dPoW technology is a key feature, as explained in Part I. dPoW provides the necessary security to protect the integrity of the blockchain. Use of dPoW is optional, and since Komodo-ecosystem asset chains are independent by nature, entrepreneurs can discontinue dPoW services at will.
Having thus created the blockchain, the entrepreneur then uses our BarterDEX technology to release the project to the world in a decentralized manner. Because BarterDEX is a decentralized exchange, no third-party manipulators can keep the entrepreneur from their crowdsourcing and innovation endeavors.
Through the use of our Jumblr privacy technology, dICO participants can purchase the product within their inherent right to barter in private.
The Challenges in Current ICO Platforms
Specific Weaknesses in the Centralized ICO Model
There are many weaknesses present in today’s Initial Coin Offering (ICO) process. Several notable weaknesses include third-party discrimination, “whale” manipulation, the vulnerability to theft and human error, and a lack of privacy.
Third-Party Discrimination
An entrepreneur seeking to serve their intended audience may experience adverse intervention from a third party. The antagonists may display personal and malicious intent, regardless of the value of the entrepreneur’s innovation.
Centralization of Technology: “Whale” Manipulation, Theft, and Human Error
During the initial stages of a blockchain’s release to the public, users who are wealthy and tech-savvy (often referred to as “whales”) have an unequal advantage: they can rapidly purchase a majority of the coin supply while it is inexpensive. Then they can manipulate the market price at the expense of less established dICO participants.
Furthermore, today’s ICOs are generally conducted in escrow, where the purchasers must transfer money to one node for holding. This typically occurs through a single website, and the cryptocurrency funds are held on a single server. They must then wait while the ICO administrators verify the transactions and distribute the coins. During this time the funding is centralized, and therefore vulnerable to thieves and human error.
Lack of Privacy
Because of the highly traceable nature of ICO transactions it is difficult, if not impossible, to perform ICOs with any level of privacy.
Third-Party Discrimination via the Centralized ICO
One weakness of the ICO process is paradoxically rooted in a one of the great strengths of blockchain technology - its borderless nature. A key power of any blockchain is that any human capable of accessing the technology can activate the blockchain, regardless of their geographical location or social status. Thus, anyone can provide yet another verifiable record of the transaction history, and this decentralization provides a crucial element of security to the blockchain. 
An ICO innovator, therefore, may prefer to use a blockchain platform that transcends man-made barriers, to protect their innovation. Circumventing man-made barriers could be integral to the blockchain’s survival because the element of decentralization prevents malicious actors from creating subjective borders around the blockchain records and then using authority to falsify and manipulate those records. 
This creates a conundrum, however. As a human race we also find strength and empowerment in subjectively defining our own demographics for various reasons, whether they be to form companies, cultures, communities, etc. While we find the ability to create subjective demographics useful, it contrasts with the borderless nature of blockchain technology. Members of one demographic may desire to participate in a specific ICO, but another demographic may find this unfavorable. Therefore, the second party might try to forestall progress. The paradox lies in the fact that for the underlying blockchain product to maintain its integrity, it must serve both communities without regard to any man-made barrier between them. 
The problem compounds even further as we observe that on a decentralized blockchain platform, a new ICO product is capable of functioning anywhere there is access to the underlying technology. Therefore, on a decentralized platform, once a new blockchain product is released any person from either demographic is now able to utilize it regardless of the overall sentiment of either demographic. The problem becomes most pronounced if members of a competing group attempt to prevent an innovation out of selfish reasons. Thus, it is imperative that the innovator have the option of protection against would-be malicious competitors.
The overall centralized nature of today’s ICO process, therefore, presents a problem. Entrepreneurs who are not able to navigate the adverse effects of an inhibiting third party may be unable to realize their full creative potential.
Centralization of ICO Technology: Whales, Hackers, and Human Error
Yet another issue plaguing ICOs is that the technology upon which an ICO is released is also centralized. This presents yet another vulnerability to human foibles. 
The Manipulative Behavior of Whales
One problem is that this centralized point of purchase creates an unequal playing field in favor of wealthy, tech-savvy users (referred to as “whales” in the cryptocurrency community) due to their financial girth. To understand this problem, one must comprehend that “nodes” (computer devices which compute the buying and selling of cryptocurrencies) take orders from ICO purchasers one-by-one. Presently, ICOs are released on only one node — for example, the purchase could take place through a single website, wherein the gathered funds are held on a single server.
Because the node can only process one transaction at a time, the person whose order arrives first will receive an advantage over the coin’s future value. If the initial purchaser is both wealthy and able to program sophisticated “bots” (custom-designed programs that automate the trading of cryptocurrencies), the whale can buy a controlling interest in the supply before less wealthy or less technologically savvy people have a chance to participate.
In our current market, frequently the people who would most benefit from an ICO are unable to participate before the supply evaporates. Meanwhile, this whale now has sufficient control on the overall supply to act as a centralized market manipulator. Buying and selling in large quantities forces price fluctuations in the whale’s favor.
Hackers and Human Error
Because all coins of an ICO typically process through one node during the purchasing period, the entire supply is vulnerable to any person with access to the node. Therefore, both malicious and clumsy human agents can destroy an ICO. The data holding the cryptocurrency can be damaged, stolen, or simply lost through incompetence.
An entrepreneur can also consider that in today’s ICO model both the funding provided by the purchasers as well as the actual ICO coins that the entrepreneur intends to sell remain on the centralized node for a long period of time. It is not just one side of the crowdsourcing endeavor that is at risk, but both.
This central point of failure can be catastrophic for all participants.
The Right to Barter in Private
Finally, the lack of current privacy options in the ICO process inhibits blockchain participants from purchasing discreetly. The right to privately exchange goods and services extends further into history than the written word. We have, as a species, utilized this right to organize into communities, institutions, and even nations.
Many of humanity’s most meaningful advancements in art, technology, and other human endeavors began in situations where the creator had the security of privacy in which to explore, to discover, to make mistakes, and to learn. 
The right to barter in private is under modern threat as the recent monumental and historical phenomenon, “The Internet of Information,” permits many kinds of people to quietly and without inhibition monitor other people’s shopping and bartering behavior. This is a dangerous development as it destroys the privacy that empowers much of humanity’s personal growth. We must preserve the right to barter in private, for we observe that there are many ways in which a common person may explore personal growth in an economic environment. 
Yet, the highly traceable nature of today’s ICO is in direct contradiction to this human need.
The Blockchain Industry Needs a Solution, and Komodo Presents an Answer
Together, these issues show that the current state of the ICO market is plagued with limitations that inhibit freedom, security, entrepreneurship, and even human growth. The cryptocurrency industry needs a solution to these problems, and Komodo presents an answer.
The Decentralized Initial Coin Offering
The Komodo ecosystem presents a solution, the decentralized the initial coin offering (dICO), that solves the aforementioned issues and even adds new possibilities to the cryptocurrency market. The decentralized nature of the dICO enables the entrepreneur to release a blockchain product beyond the reach of a malicious third-party influencer. Through BarterDEX technology, the dICO allows an entrepreneur to release their product in a manner that mitigates and even eliminates many of the issues regarding whales, hackers, and human error. With the advantage of Komodo’s Jumblr technology, the participants in a dICO are empowered with The Right to Barter in Private. 
The Process of Creating a New Blockchain in the Komodo Ecosystem
Note: If you are interested in performing your own dICO to become a part of the Komodo ecosystem, please visit our Slack channel to discuss your concept directly with our team. We are actively seeking new partnerships.
Formerly, coding and generating the blockchain itself were some of the most difficult aspects in creating a new blockchain. The Komodo team has simplified this into easy steps. The process normally requires considerable experience in the language of C programming and many hours of arduous effort. Now, through Komodo’s Iguana Core technology (introduced in Part I), the entrepreneur can create a new independent blockchain by entering just two simple commands in the command prompt interface of their computer.
The first command:
./komodod -ac_name=[ENTREPRENEUR’S COIN] -ac_supply=[TOTAL COIN SUPPLY] -gen
The first part of the command, [./komodod], initiates a new instance of the underlying software, Komodod, that holds much of the Komodo ecosystem together. The Komodod software is rooted in Iguana Core technology.
By default, the initial [./komodod] command executed alone would launch the Komodo main chain, KMD, on the user’s computer. However, the next part of the command tells Komodod to behave differently. 
-ac_name=[ENTREPRENEUR’S COIN]
This command tells Komodod to look for a coin with the inserted name.
-ac_supply=[TOTAL COIN SUPPLY]
This tells Komodod how many total coins there should be in this other chain. 
-gen
This tells Komodod that the user desires to mine this network.
The underlying code of Iguana Core can now make several decisions. First, it will check its connection to the Komodo ecosystem to see if there is a coin by the name of [ENTREPRENEUR’S COIN], having a coin supply of [TOTAL COIN SUPPLY]. If the coin name and total supply are not found, komodod will assume that the user is attempting to create a new coin, and the [-gen] command tells komodod that the user wants to mine it.
Komodod now begins the automated process of creating a new asset chain in the Komodo ecosystem. Komodod will first make a fresh and empty clone of the KMD main chain (though it will not yet generate the actual coins), with only a few differences to the underlying nature of the chain. 
The Features of the New Asset Chain
There are several primary differences between an asset chain and the main Komodo chain. For example, the asset chain will not automatically generate the 5% APR reward for all wallet addresses holding coins, unlike the main chain. Furthermore, the asset chain’s dPoW consensus mechanism is built to notarize to the main chain (as explained in Part I).
Some of the differences reveal strong advantages held by members of the Komodo ecosystem. By design, this asset chain is capable of automatically adopting any updates that the Komodo core development team add to the framework. The asset chain also has a built-in capacity within the framework to allow the entrepreneur to code new rules. 
For example, the entrepreneur may decide not to use a PoW consensus mechanism, but may instead prefer PoS (discussed in Part I). Other changes can also be made, according to the entrepreneur’s imagination and developer knowledge. So long as the new code that the entrepreneur adds to the asset chain does not interfere with the overall framework, the asset chain will smoothly integrate with the rest of the Komodo ecosystem. 
In addition, asset chains can use the smart-contract capabilities native to the Bitcoin protocol. Various vendors and developers in open-source communities provide resources to make this easier, though we make no specific endorsements of any particular product. One example of smart-contract technology native to the Bitcoin protocol is a Conditional Time-Locked Deposit, which our BarterDEX technology employs in the trading process.
In the long term, we intend to release our own smart-contract technology that will greatly enhance the coding experience. Our intention is to make our smart contracts language agnostic, meaning that any language (JavaScript, Ruby, C#, Python, etc.) will be capable of executing smart contracts in the Komodo ecosystem. This will empower asset chains as well as the main chain. We intend to begin the creation of this technology this year (2018).
For the purposes of our discussion, this new asset chain is otherwise the same as the Komodo main chain, including the features to communicate natively with other chains in the Komodo ecosystem via BarterDEX.
The reader may note that this new Komodo asset chain is not a colored-token running on top of a parent blockchain, as is often the case in other blockchain ecosystems (consider the ERC20 token of the Ethereum platform). Instead, this asset chain is an entirely unique and independent blockchain unto itself. 
This empowers the entrepreneur with significant advantages over other blockchain ecosystems. The asset chain can run on its own nodes, act according to whatever rules the entrepreneur can imagine, and can scale according to its own audience. Should an asset chain in the Komodo network experience a sudden explosion of activity, the sudden change will not negatively impact the overall Komodo ecosystem. This independence grants a significant competitive advantage in the form of overall security, speed, and ease of use. 
Consider the advantage of developing an entrepreneurial product as a fully independent blockchain. Should the entrepreneur desire at a future point to leave the Komodo ecosystem for any reason, they are free to take their blockchain product with them.
Generating and Mining the New Coins
Let us return now to the moment after the entrepreneur executes the first command in the command prompt, and komodod creates a fresh and empty clone of the Komodo main chain. While the instance of the komodod program (running on the entrepreneur’s local computer device) will create the necessary code for the new asset chain, komodod will not yet generate the coin supply itself. Komodod instead will wait for the next few steps to occur. 
The reason for the wait is that a blockchain’s essence depends on existing in a network of multiple devices connected together, not in isolation. This is the very nature of decentralization. Komodod will wait until it receives a signal from another device, thus indicating that it has a peer with which to form the asset-chain network. 
The Entire Coin Supply is Distributed in the Genesis Block
It is imperative to note that in the komodod process, the entire coin supply is created and distributed immediately to the device that mines the first block, the Genesis Block. The code performs this distribution as a one-time reward for discovering the first valid block hash (as explained in Part I).
Due to the sensitive nature of this step, we recommend that the entrepreneur use a Virtual Private Server (VPS) service. This allows two secure devices to connect to each other with little, if any, risk of a third-party actor mining the first block (which would thus enable a would-be thief to acquire the entire coin supply before distribution).
Having established a secure connection with a second device, the entrepreneur will enter the following command on the second device.
./komodod -ac_name=[ENTREPENUER’S COIN] -ac_supply=[TOTAL COIN SUPPLY] -addnode=[INSERT IP ADDRESS OF FIRST DEVICE]
Note that the first three elements of the command, [./komodod], [-ac_name], and [-ac_supply], are the same. It is important that the parameters inserted into these commands match exactly. Otherwise, the instances of komodod running on the separate devices will ignore each other, and the coin will not be mined. 
Note also that the [-gen] command is not present. In this circumstance, we are assuming that the entrepreneur wants to capture the entire coin supply on the first device. Technically speaking, assuming the entrepreneur has ownership over both devices, it does not matter if both devices initiate the [-gen] command. Both devices will attempt to mine the first block and the superior device will receive the coin supply.
There is one key difference in the command.
-addnode=[INSERT IP ADDRESS OF FIRST DEVICE]
This command tells the second device to look across the available connection (internet, VPS service, etc.) for the first device, which is already running an instance of komodod and the new coin. The command here simply tells the computer the proper IP address of the first device. (An IP address can be compared to a human being’s home mailing address, where the IP address is designed for computers to be able to geographically find each other.) 
As soon as these two devices connect, having all of the proper komodod software running and set in place, the mining begins. One of the devices will mine the first block and instantly receive the total coin supply of the entire blockchain into the user’s chosen wallet.
Both devices sync this information to each other, and the [ENTREPRENEUR’S COIN] now exists in the world. The entrepreneur can also add more and more devices to the network. 
Notarizing to the Komodo Main Chain
To receive the security of the dPoW consensus mechanism, the entrepreneur simply needs to have the democratically elected notary nodes add the [ENTREPENEUR’S COIN] to their internal list of coins to notarize. This will empower the entrepreneur’s product with the same verifiable and decentralized security of the Komodo parent chain. 
The process of adding a new notarization service can be executed by the notary nodes with just a simple command. While we are at this early stage of development, this sign-up process for new dICO products is not yet automated. In the future, we intend to automate the majority of the sign-up process. 
There is a fee for receiving notarization services. This provides an economic incentive to the notary nodes, and also helps to cover the business costs associated with notarization (recall that all notarizations are financial transactions, by nature).
Our first partners, Monaize, are already successfully notarizing to the Komodo main chain. We are actively seeking our next partners, and we encourage the reader to reach out to our team directly for inquiries.
Entrepreneurs are able to use the asset chain’s native dPoW consensus mechanism to notarize to the Komodo main chain and create a secure backup of the coin’s history. Even in the event of an attack at this early state of existence the entrepreneur can rest assured that their product will survive so long as one copy of the blockchain’s history exists.
Everything is set on the backend for the entrepreneur, and they are now fully prepared to begin the dICO process.
The Distribution of Coins
The Trials and Travails of the Centralized ICO Method
Previously, the entrepreneur at this point would have been required to go through a centralized ICO process.
This could have required several cumbersome and possibly dangerous steps. For example, the entrepreneur would begin gathering cryptocurrencies from their audience to personally hold in escrow while the process of matching purchases to the new blockchain coin were verified. 
To distribute these coins, the entrepreneur had two primary options. They could have created and distributed a digital software wallet capable of holding the entrepreneur’s coins. This would of course require their audience to download this software. The entrepreneur would then have to send all of the appropriate coins to each wallet address, according to the process they established during their ICO. 
Or, the entrepreneur would have to make formal arrangements with another service to manage this process, such as with a centralized exchange. This would require a successful negotiation with this third party, likely paying fees as a part of the agreement, and then being required to act within the centralized exchange’s arbitrary framework. 
The centralized ICO process can be arduous and, at times, disastrous.
Enter The dICO - Powered by Komodo’s BarterDEX & Jumblr Technology
The Komodo dICO model is an extension of Komodo’s BarterDEX technology. BarterDEX is an atomic-swap powered, decentralized exchange. It enables users to directly exchange cryptocurrencies from one person to another without  third-party involement (i.e. no centralized exchanges, escrow services, vouchers, etc.). Furthermore, as the dICO model is entirely decentralized, anyone can use it at will. There are no centralized authority figures capable of creating artificial control points that can be manipulated at the expense of the users.
A detailed explanation of our BarterDEX technology is available in our whitepaper here.
To begin the distribution process, the entrepreneur first chooses how many nodes they would like to use for the distribution. Nodes can be any type of machine capable of connecting to the Internet, so as to connect to BarterDEX. Typically, a small-business entrepreneur may choose to use server machines. Server capacity can be rented online, and the servers can be distributed geographically throughout the world if desired. As an example, our e-banking platform partner Monaize is working with us to perform the world’s first official dICO launch. Monaize is employing 70+ servers throughout the world for the duration of their dICO. 
While renting a multiplicity of servers may be the method of choice for an established small-business, it is not a requirement. An owner of an even smaller business, operating on a low budget, can simply use their own computer(s), geographically stationed nearby for convenience. On the other hand, a large corporation could use the server capacity they already own. The number and strength of the machines is a choice made by the entrepreneur.
Having decided the method of distribution, the entrepreneur will then prepare the total supply of coins. (We are assuming the coins are still located on the first device that mined the entrepreneur’s genesis block.) The entrepreneur will first break down the total collection of coins into smaller packets. These packets of coins are ultimately what will be traded on BarterDEX with their audience. The size of the packets is chosen by the entrepreneur, and therefore the entrepreneur can choose to make the purchase size of the packets small enough to pass under any KYC legal requirements.
(For a detailed explanation of the process of breaking down the total collection into smaller packets of coins, we also recommend reading about UTXO technology in our BarterDEX whitepaper.) 
Having created this collection of packets of coins, the entrepreneur then sends the packets to all the chosen nodes throughout the BarterDEX network. Coins are distributed to each node’s wallet(s) by a normal transaction. 
With the coins distributed as desired, the entrepreneur sets the time and date when each packet of coins will be available for purchase. When a packet of coins becomes available on BarterDEX for trading, members of the Komdodo ecosystem simply purchase the coins (please see our discussion on atomic-swap technology in our BarterDEX whitepaper for more details).
The Many Solutions of the dICO Model: Security, Privacy, Decentralization, and Freedom
This method of conducting a decentralized initial coin offering mitigates and circumvents the issues found in a centralized ICO. The entire process is conducted in a decentralized manner. The dICO entrepreneur has direct access to their audience, as there are no centralized human authorities acting as middlemen. 
Because the packets of coins can be distributed across a vast range of nodes, and because the entrepreneur can program the time at which each packet of coins becomes available, it is possible to prevent a “whale” from seizing a majority control in one swooping moment of the dICO. The whale will have to compete to purchase their desired amount one transaction at a time, just like the other members of the ecosystem.
Furthermore, BarterDEX has advanced trading features that provide additional whale resistance. For example, BarterDEX is capable of performing not just one trade at a time. Instead, it can handle ten to twenty trades at once. Therefore, even if the whale were able to place large orders on every node of a dICO, BarterDEX would still be performing orders simultaneously for other members of the Komodo ecosystem. 
Concerning theft, the dICO provides solutions to both of the methods of theft in the centralized ICO. A hacker might be able to crack the security of a node during the dICO process. Unlike in the centralized ICO, once the distribution of the packets of coins takes place the effect of their distribution adds a layer of security from a would-be hacker. The hacker can only steal funds at the node they manage to penetrate. Were the hacker to steal coins before the actual dICO, the entrepreneur would have the option to simply create a [NEW ENTREPRENEUR’S COIN] again, without losing any personal wealth. 
Because the trades happen instantaneously with each packet of coins available for sale, the entrepreneur is only in possession of either their own [ENTREPRENEUR’S COIN] supply, or the cryptocurrency funds provided by the dICO participants—but not both. The entrepreneur is never at risk of losing both their own funds and the funds of their audience, which is a strong advantage over today’s ICO model. 
Regarding human error, should one of the node’s databases be corrupted by accident or hardware failure, only one node’s coin supply is lost. 
Because the coins are immediately available on the BarterDEX exchange for trading the entrepreneur and the Komodo ecosystem have an immediate trading market. This stands in contrast to today’s ICO model where users often wait weeks or even months before liquidity for their ICO product arises in a centralized exchange.
Finally, through Jumblr technology participants have the option of privacy when purchasing the dICO product. This enables them to support the crowdsourcing efforts of the entrepreneur within their inherent right to barter in private.
Upon conclusion of the distribution of the dICO coin supply the entrepreneur has successfully and immediately completed all of the crowdsourcing-related steps that could have taken months in today’s typical ICO model. 
Komodo’s dICO model is significantly easier, freer from manipulation, more flexible, and more secure. 
dPoW & the dICO Model: Freedom, Security, and Peace of Mind
Through the combination of Komodo technologies—dPoW security, the dICO, BarterDEX, Jumblr, Iguana Core, and other Komodo technologies not mentioned here—an entrepreneur building on the Komodo platform possesses a fortress of security and freedom in which to innovate and prosper. 
We are now in the process of performing our first dICO with our business partner, Monaize—an e-banking business focused on providing financial services to small-business owners. The Monaize team created their MNZ coin using the methods described in this paper, and they distributed a small amount of the MNZ coins on BarterDEX for preliminary dICO test purposes. 
Our highly active, volunteer community members have performed thousands of atomic-swap trades on BarterDEX in the effort to strengthen the dICO process. As soon as our development team is certain that the process is smooth, we will set the final date for the official dICO launch.
While some may say that the growth of the cryptocurrency market is reaching a zenith, at Komodo we believe that we have not yet begun the fight. We hope that Komodo technologies will make a meaningful contribution to the remarkable advent of decentralization.
